import Configuration from "./configuration";
{{>modelIncludes models=components.schemas options=_options}}
{{>modelIncludes models=components.inlineObjects options=_options}}
import { request } from "./request";
import { Parameter, ParameterBuilder } from "./parameterBuilder";
import { deserialize, serialize } from "./serializer";

/**
 * {{_info.title}}
 *
{{#if info.description}}{{docComment info.description}}{{/if}}
{{#if info.version}} * @version {{info.version}}{{/if}}
 */
export default class Api{{_tag.name}} {
  private config: Configuration;

  constructor(config: Configuration) {
    this.config = config;
  }

  {{#each paths}}
  {{setVar "path" @key}}
  {{#each this}}
    {{#ifEquals ../../_tag.name _tag.name}}
      
      /** 
      {{#if summary}}
       * {{summary}}
       * 
      {{/if}}
      {{#if description}}
       * {{description}}
       *
      {{/if}}
      {{#if tags}} * @tags {{tags}}{{/if}}
      {{#each _sortedParameters}}
       * @param { {{~typeConvert schema ../../../_options~}} } {{name}} {{description}}
      {{/each}}
      */
      async {{operationId}}(
        {{#each _sortedParameters}}
          {{name}}{{#if _optional}}?{{/if}}:
          {{typeConvert schema ../../../_options}}
          {{#if schema.default}} = {{{quoteIfString schema.default}}}{{/if}},
        {{/each}}
      ): Promise<{{#if _response.schema}}{{typeConvert _response.schema ../../_options}}{{else}}null{{/if}}> {

        const builder = new ParameterBuilder();
        {{#each _sortedParameters}}{{#unless _optional}}
        builder.add("{{name}}", {{name}}, "{{typeConvert schema}}", "{{in}}");
        {{/unless}}{{/each}}
        
        {{#each _sortedParameters}}{{#if _optional}}
        if ({{name}}) {
          builder.add("{{name}}", {{name}}, "{{typeConvert schema}}", "{{in}}");
        }
        {{/if}}{{/each}}

        const response = await request(this.config, "{{@root.path}}", "{{@key}}", builder.parameters);
        {{#if _response.schema}}
        return deserialize(response, "{{typeConvert _response.schema}}");
        {{else}}
        return null;
        {{/if}}
      };
    {{/ifEquals}}
  {{/each}}  
  {{/each}}
}

